@using HMS.HealthTrack.Web.Areas.Inventory.Models.Orders
@using HMS.HealthTrack.Web.Areas.Inventory.Models.Stock
@using Kendo.Mvc.UI
@model ReceiveProductInput

@{
   ViewBag.Title = "Receive item";
}
<div class="row">
   <div class="col-xs-2 col-md-2 logo-big">
      <img src="~/Content/images/Icons/72x72/Surgery Tool.png" class="img-responsive" />
   </div>
   <div class="col-xs-6 col-md-6 col-lg-10 content-title">
      <div class="row">
         <div class="col-sm-12">
            <h2>Receive item</h2>
         </div>
      </div>
   </div>
</div>
<div id="alertPlaceholder"></div>
<div class="row row-wide">
   <div class="col-lg-6">
      <div class="panel panel-default">
         <div class="panel-heading">Product to receive</div>
         <div class="panel-body" id="productPanel">
            <div class="form-horizontal">
               <div class="form-group">
                  <div class="col-md-3 col-lg-3 control-label">
                     <label for="scanCodeSearch">Scan code</label>
                  </div>
                  <div class="col-md-6 col-lg-6">
                     <span id="scanCodeSearch">
                        @(Html.Kendo().ComboBox().Name("Code")
                             .AutoBind(true)
                             .DataSource(source => source.Read(read => read.Action("GetProductByCode", "Products")).ServerFiltering(true))
                             .DataTextField("Key").DataValueField("Key")
                             .Events(events => events.DataBound("onCodeDataBound").Filtering("onCodeFiltering").Open("onCodeOpen").Select("onCodeSelect"))
                             .Filter("contains")
                             .HtmlAttributes(new {@class = "page-input"})
                             )
                     </span>
                  </div>
                  <div class="col-md-2 col-lg-3">
                     @Html.Kendo().Button().Name("ProductSearch").Content("Adv. Search").Events(e => e.Click("onAdvancedSearch"))
                  </div>
               </div>
               <div id="productInformation" class="hidden">
                  @Html.Hidden("productManageStock")
                  <div class="form-group">
                     <div class="col-md-offset-3 col-md-6 col-lg-offset-3 col-lg-6">
                        <hr class="no-margin" />
                     </div>
                  </div>
                  <div class="form-group">
                     <div class="col-md-3 text-right">
                        @Html.Label("Description")
                     </div>
                     <div class="col-sm-7">
                        <span id="productDescription"></span>
                     </div>
                  </div>
                  <div class="form-group">
                     <div class="col-md-3 text-right">
                        @Html.Label("SPC")
                     </div>
                     <div class="col-sm-7 control-label-text">
                        <span id="productSPC"></span>
                     </div>
                  </div>
                  <div class="form-group">
                     <div class="col-md-3 text-right">
                        @Html.Label("UPN")
                     </div>
                     <div class="col-sm-7">
                        <span id="productUPN"></span>
                     </div>
                  </div>
               </div>
            </div>
         </div>
      </div>
   </div>
   <div class="col-lg-6">
      <div class="panel panel-default">
         <div class="panel-heading">Receipt information</div>
         <div class="panel-body" id="receivePanel">
            @Html.Partial("_ReceiveProduct", Model)
         </div>
      </div>
   </div>
</div>
<div id="CreateProductWindow"></div>
<div id="advancedSearchWindow"></div>

<div id="productOrderWindow">
   <div class="container-fluid">
      <div class="row">
         <div class="col-sm-12">
            <p>This has ordered items in the following orders. <br />Please select the order you are receiving, otherwise click 'Continue'.</p>
         </div>
      </div>
      <div>
         @(Html.Kendo().Grid<IndexOrdersViewModel>().Name("productOrderGrid")
              .AutoBind(false)
              .Columns(col =>
              {
                 col.Bound(c => c.Name);
                 col.Bound(c => c.Status);
                 col.Bound(c => c.Items);
                 col.Bound(c => c.DateCreated).Format("{0:dd/MM/yyyy}");
              })
              .DataSource(ds => ds.Ajax()
                 .Events(events => events.Error("error_handler"))
                 .PageSize(5)
                 .Read(read => read.Action("GetOpenOrdersForProduct", "Orders").Data("ordersProductId"))
              )
              .Events(events => events.DataBound("onProductOrderGridDataBound"))
              .Filterable(filter => filter.Extra(false))
              .Pageable(pageable => pageable.Refresh(true).PageSizes(true).ButtonCount(5))
              .Resizable(resize => resize.Columns(true))
              .Selectable()
              .Sortable()
              )
      </div>
      <br />
      <div class="row row-high">
         <div class="col-sm-12 pull-right text-right">
            @(Html.Kendo().Button().Name("selectProductOrderWindow").Content("Go to Receive Order").HtmlAttributes(new {@class = "k-primary"}).Events(events => events.Click("onSelectProductOrderClick")))
            @(Html.Kendo().Button().Name("cancelProductOrderWindow").Content("Continue"))
         </div>
      </div>
   </div>
</div>

@section scripts
{
   <script src="~/Areas/Inventory/Scripts/AdvancedSearch.js"></script>
   <script src="~/Areas/Inventory/Scripts/CreateProduct.js"></script>
   <script src="~/Areas/Inventory/Scripts/ScanCodeControl.js"></script>

   <script src="~/Scripts/Inventory.js"></script>
   <script src="~/Scripts/kendoGridFilter.js"></script>
   <script type="text/javascript">
      $(document).ready(function() {
         createQuickCreateWindow();
         createProductOrderWindow();
         initialiseScanCodeControl();
         $('#Code').focus();

         $('#ProductId').change(function () {
            $('#Code').data('kendoComboBox').select(-1);
            setProductDetails($('#ProductId').val());
            showProductInformation();
         });

         if ($('#ProductId').val() != '' && $('#ProductId').val() > 0) {
            setProductDetails($('#ProductId').val());
            showProductInformation();
         }

         var newStock = "@ViewBag.NewStock";
         if (newStock != "") {
            getAlert('success', 'Successfully received stock for <strong>' + newStock + '</strong>.');
         }

         $('#addContinue').click(function (e) {
            if (!checkStockManaged()) {
               return;
            }

            $('#ContinueReceipt').val(true);
            $('#receiveProductForm').submit();
         });

         $('#addReturn').click(function (e) {
            if (!checkStockManaged()) {
               return;
            }
            $('#ContinueReceipt').val(false);
            $('#receiveProductForm').submit();
         });

         createAdvancedSearchWithGrid();

         //$('#SerialNumber').on('input propertychange paste', function() {
         //   var quantity = $('#Quantity');
         //   if ($(this).val().trim() != '') {
         //      quantity.attr('readonly', 'readonly');
         //      quantity.val(1);
         //   } else if (!quantity.is('[requiresSerial]')) {
         //      quantity.removeAttr('readonly');
         //   }
         //});
      });

      function checkStockManaged() {
         if ($('#productManageStock').val() == 'false') {
            getAlert('warning', "Unable to receive stock for a product that does not have it's stock managed. Please update the <a href='@Url.Action("Details", "Products")/ " + $('#ProductId').val() + " '>product</a> first if you wish to proceed.");
            return false;
         }
         return true;
      }

      function createProductOrderWindow() {
         $('#productOrderWindow').kendoWindow({
            width: '745px',
            title: 'Open orders containing selected product',
            visible: false,
            modal: true,
            open: function (e) {
               e.sender.center();
               $('#productOrderGrid').on('dblclick', 'tbody > tr', function () {
                  $('#selectProductOrderWindow').trigger('click');
               });

               $('#cancelProductOrderWindow').click(function (ee) {
                  $('#productOrderWindow').data('kendoWindow').close();
                  $('#Quantity').focus();
               });

            }
         });
      }

      function error_handler(e) {
         if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function(key, value) {
               if ('errors' in value) {
                  $.each(value.errors, function() {
                     message += this + "\n";
                  });
               }
            });
            alert(message);
         }
      }

      function onLocationDataBound(e) {
         this.value(@Html.Encode(@ViewBag.UserPreferredLocation).ToString());
      }

      function onAdvancedSearch(e) {
         e.preventDefault();
         $('#alertPlaceholder').empty();
         openAdvancedSearch();
      }

      function onProductOrderGridDataBound(e) {
         if (e.sender.dataSource.data().length == 1) {
            setTimeout(function() {
               var row = e.sender.tbody.find('tr:first');
               e.sender.select(row);
            }, 50);
         }
      }

      function onReceiveProductSuccess(e) {
         if (e.url) {
            window.location.href = e.url;
         }
      }

      function onReceiveProductFailure(e) {
         if (e.status == 400) {
            getAlert('danger', e.statusText);
            return;
         }

         alert('Something went wrong, please refresh and try again.');
      }

      function onSelectProductOrderClick(e) {
         var grid = $('#productOrderGrid').data('kendoGrid');
         var selected = grid.select();
         if (selected.length == 0) return;
         var item = grid.dataItem(selected);
         if (item == null) return;
         var orderId = item.InventoryOrderId;
         window.location.href = '@Url.Action("ReceiveOrder", "Stock")/?id=' + orderId + '&firstProduct=' + $('#ProductId').val();
      }

      function ordersProductId(e) {
         return {
            productId: $('#ProductId').val()
         }
      }

      function showProductInformation() {
         $('#productPanel').height(function() {
            return $('#receivePanel').height();
         });
         $('#productInformation').removeClass('hidden');
         $('#Quantity').focus();

         $.ajax({
            async: true,
            contentType: 'application/json',
            type: 'GET',
            url: '@Url.Action("ProductHasOpenOrders", "Orders")/?productId=' + $('#ProductId').val(),
            success: function (data) {
               if (data) {
                  $('#productOrderWindow').data('kendoWindow').open();
                  $('#productOrderGrid').data('kendoGrid').dataSource.read();
               }
            },
            error: function (data) {

            }
         });
      }
   </script>
}
<style>
   
   
   
</style>