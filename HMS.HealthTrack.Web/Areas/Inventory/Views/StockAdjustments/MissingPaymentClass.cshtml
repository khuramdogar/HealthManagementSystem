@using HMS.HealthTrack.Web.Areas.Inventory.Models.StockAdjustment
@using Kendo.Mvc.UI
@model dynamic

@{
   ViewBag.Title = "Missing payment class";
}

<div class="row">
   <div class="col-xs-2 col-md-2 logo-big">
      <img src="~/Content/images/Icons/72x72/Barcode Warning.png" class="img-responsive" />
   </div>
   <div class="col-xs-6 col-md-6 col-lg-10 content-title">
      <div class="row">
         <div class="col-sm-12">
            <h2>Bookings requiring "Payment Class"</h2>
         </div>
      </div>
   </div>
</div>
@(Html.Kendo().Grid<PatientBookingConsumptionDetails>()
     .Name("grid")
     .Columns(columns =>
     {
        columns.Bound(p => p.PatientNumber).Width(150);
        columns.Bound(p => p.FirstName).Width(200);
        columns.Bound(p => p.Surname).Width(200);
        columns.Bound(p => p.AppointmentDate).ClientTemplate("#: kendo.format('{0: dd/MM/yyyy hh:mm}', AppointmentDate)#").Width(130).Title("Appointment").Filterable(f => f.UI(GridFilterUIRole.DateTimePicker));
     })
     .DataSource(dataSource => dataSource
        .WebApi()
        .PageSize(20)
        .Read(read => read.Url(Url.HttpRouteUrl("DefaultApi", new {controller = "PatientConsumption", report = "MissingPaymentClass"})))
     )
     .Events(events => events.DataBound("onDataBound"))
     .Filterable()
     .Pageable(pageable => pageable.Refresh(true).PageSizes(true).ButtonCount(5))
     .Resizable(resize => resize.Columns(true))
     .Sortable()
     .ToolBar(toolbar =>
     {
        toolbar.Excel();
        toolbar.Custom().Name("Print").HtmlAttributes(new {id = "printGrid"});
     })
           .Excel(excel => excel.FileName("Missing payment class.xlsx").Filterable(true).AllPages(true).ProxyURL(Url.Action("Excel_Export_Save", "StockAdjustments")))
           .Pdf(pdf => pdf.FileName("Missing payment class.pdf").PaperSize("A4").ProxyURL(Url.Action("Excel_Export_Save", "StockAdjustments")))
     )

<script src="~/Scripts/kendo/2018.2.516/jszip.min.js"></script>
<script src="~/Scripts/Inventory.js"></script>
<script type="text/javascript">
   $(document).ready(function () {
      $('#printGrid').click(function () {
         printGrid();
      });
      var grid = $('#grid').data('kendoGrid');
      grid.bind('excelExport', function (e) {
         var sheet = e.workbook.sheets[0];
         var template = kendo.template(this.columns[3].template);

         for (var i = 0; i < sheet.rows.length; i++) {
            var row = sheet.rows[i];
            if (row.type != "data") {
               continue;
            }
            var dataItem = { AppointmentDate: row.cells[3].value };
            row.cells[3].value = template(dataItem);
         }
      });
   });

   function onDataBound(e) {
      applyGridTooltips();
   }

   function printGrid() {
      var gridElement = $('#grid'),
         printableContent = '',
         win = window.open('', ''),
         doc = win.document.open();

      var htmlStart =
         '<!DOCTYPE html>' +
            '<html>' +
            '<head>' +
            '<meta charset="utf-8" />' +
            '<title>Consumption report</title>' +
            '<link href="~/Content/kendo/2018.2.516/kendo.common.min.css" rel="stylesheet" />' +
            '<style>' +
            'html { font: 8pt sans-serif; }' +
            '.k-grid { border-top-width: 0; }' +
            '.k-grid, .k-grid-content { height: auto !important; }' +
            '.k-grid-content { overflow: visible !important; }' +
            '.k-grid .k-grid-header th { border-top: 1px solid; }' +
            '.k-grid td { line-height: 2em; }' +
            '.k-grouping-header { display: none;}' +
            '.k-grid-toolbar, .k-grid-pager > .k-link { display: none; }' +
            '</style>' +
            '</head>' +
            '<body>';

      var htmlEnd =
         '</body>' +
            '</html>';

      var gridHeader = gridElement.children('.k-grid-header');
      if (gridHeader[0]) {
         var thead = gridHeader.find('thead').clone().addClass('k-grid-header');
         printableContent = gridElement
            .clone()
            .children('.k-grid-header').remove()
            .end()
            .children('.k-grid-content')
            .find('table')
            .first()
            .children('tbody').before(thead)
            .end()
            .end()
            .end()
            .end()[0].outerHTML;
      } else {
         printableContent = gridElement.clone()[0].outerHTML;
      }

      doc.write(htmlStart + printableContent + htmlEnd);
      doc.close();
      win.print();
   }

</script>