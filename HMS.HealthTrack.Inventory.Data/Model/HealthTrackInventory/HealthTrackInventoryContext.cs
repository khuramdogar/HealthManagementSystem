// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
// 
// Do not make changes directly to this file - edit the template instead.
// 
// The following connection settings were used to generate this file:
//     Configuration file:     "HMS.HealthTrack.Web\Web.config"
//     Connection String Name: "HealthTrackInventoryContext"
//     Connection String:      "Data Source=devdaniel\SQLSERVER2014; Initial Catalog=HealthTrack_Web; Integrated Security=true; Persist Security Info=True;"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Express Edition (64-bit)
// Database Engine Edition: Express

// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51

#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using System.Threading.Tasks;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace HMS.HealthTrack.Web.Data.Model.HealthTrackInventory
{
   // ************************************************************************
   // Unit of work
   public interface IHealthTrackInventoryContext : IObjectContextAdapter, IDisposable
   {
      IDbSet<Inventory_Master> Inventory_Master { get; set; }
      IDbSet<Inventory_Used> Inventory_Used { get; set; }

      int SaveChanges();
      Task<int> SaveChangesAsync();
      Task<int> SaveChangesAsync(CancellationToken cancellationToken);
   }

   // ************************************************************************
   // Database context
   public partial class HealthTrackInventoryContext : DbContext, IHealthTrackInventoryContext
   {
      static HealthTrackInventoryContext()
      {
         Database.SetInitializer<HealthTrackInventoryContext>(null);
      }

      public HealthTrackInventoryContext()
         : base("Name=HealthTrackInventoryContext")
      {
         InitializePartial();
      }

      public HealthTrackInventoryContext(string connectionString) : base(connectionString)
      {
         InitializePartial();
      }

      public HealthTrackInventoryContext(string connectionString, DbCompiledModel model) : base(connectionString, model)
      {
         InitializePartial();
      }

      public virtual IDbSet<Inventory_Master> Inventory_Master { get; set; }
      public virtual IDbSet<Inventory_Used> Inventory_Used { get; set; }

      protected override void Dispose(bool disposing)
      {
         base.Dispose(disposing);
      }

      public bool IsSqlParameterNull(SqlParameter param)
      {
         var sqlValue = param.SqlValue;
         var nullableValue = sqlValue as INullable;
         if (nullableValue != null)
            return nullableValue.IsNull;
         return sqlValue == null || sqlValue == DBNull.Value;
      }

      protected override void OnModelCreating(DbModelBuilder modelBuilder)
      {
         base.OnModelCreating(modelBuilder);

         modelBuilder.Configurations.Add(new Inventory_MasterConfiguration());
         modelBuilder.Configurations.Add(new Inventory_UsedConfiguration());

         OnModelCreatingPartial(modelBuilder);
      }

      public static DbModelBuilder CreateModel(DbModelBuilder modelBuilder, string schema)
      {
         modelBuilder.Configurations.Add(new Inventory_MasterConfiguration(schema));
         modelBuilder.Configurations.Add(new Inventory_UsedConfiguration(schema));
         return modelBuilder;
      }

      partial void InitializePartial();
      partial void OnModelCreatingPartial(DbModelBuilder modelBuilder);
   }

   // ************************************************************************
   // POCO classes

   [GeneratedCode("EF.Reverse.POCO.Generator", "2.16.1.0")]
   public partial class Inventory_Master
   {
      public Inventory_Master()
      {
         Inv_BuyCurrency = "A$";
         Inv_BuyCurrencyRate = 1.0;
         Inv_UseExpired = false;
         Inv_UseSterile = false;
         deleted = false;
         Inventory_Used = new List<Inventory_Used>();
         InitializePartial();
      }

      public int Inv_ID { get; set; }
      public string Inv_SPC { get; set; } // Supplier Product Code
      public string Inv_LPC { get; set; } // Local Product Code (eg Hospital)
      public string Inv_UPN { get; set; } // Universal Product Number (EAN UPN )
      public string Inv_Description { get; set; }
      public string Inv_Group { get; set; }
      public string Inv_SubGroup { get; set; }
      public decimal? Inv_BuyPrice { get; set; }
      public string Inv_BuyCurrency { get; set; }
      public double? Inv_BuyCurrencyRate { get; set; }
      public decimal? Inv_SellPrice { get; set; }
      public string Inv_GL { get; set; } // General Ledger Code
      public string Manufacturer { get; set; } // Manufacturer
      public bool? Inv_UseExpired { get; set; }
      public bool? Inv_UseSterile { get; set; }
      public bool? deleted { get; set; }
      public DateTime? deletionDate { get; set; }
      public string deletionUser { get; set; }
      public DateTime? dateLastModified { get; set; }
      public string userLastModified { get; set; }
      public DateTime? dateCreated { get; set; }
      public string userCreated { get; set; }
      public string Billing_Code { get; set; }
      public decimal? Min_Benefit { get; set; }
      public decimal? Max_Benefit { get; set; }
      public string Description_Additional { get; set; }
      public string Dimensions { get; set; }
      public string ProductModel { get; set; }
      public string SpecialRequirements { get; set; }
      public int? Markup { get; set; }
      public int? PriceModelID { get; set; }

      public virtual ICollection<Inventory_Used> Inventory_Used { get; set; }

      partial void InitializePartial();
   }

   public partial class Inventory_Used
   {
      public Inventory_Used()
      {
         deleted = false;
         invNotUsed = false;
         StockStatus = 0;
         InitializePartial();
      }

      public int invUsed_ID { get; set; }
      public long? container_ID { get; set; }
      public byte? cversion { get; set; }
      public int? patient_ID { get; set; }
      public int? invItem_ID { get; set; } // referres the ID in the Inventory_Master table
      public string invUsed_SPC { get; set; } // Supplier Product Code
      public string invUsed_LPC { get; set; } // Local Product Code (eg Hospital)
      public decimal? invUsed_SellPrice { get; set; }
      public string invUsed_GL { get; set; } // General Ledger Code
      public string invUsed_SerialNo { get; set; } // Lot Number/Serial Number
      public short? invUsed_Qty { get; set; } // General Ledger Code
      public string invUsed_Units { get; set; }
      public int? invUsed_Location { get; set; } // location the item is stored at
      public bool? deleted { get; set; }
      public DateTime? deletionDate { get; set; }
      public string deletionUser { get; set; }
      public DateTime? dateLastModified { get; set; }
      public string userLastModified { get; set; }
      public DateTime? dateCreated { get; set; }
      public string userCreated { get; set; }
      public int? admissionStage_ID { get; set; }
      public string invDescription { get; set; }
      public bool? invNotUsed { get; set; }
      public ConsumptionProcessingStatus StockStatus { get; set; }
      public string StatusMessage { get; set; }
      public string LOTNO { get; set; }
      public string ExtStudy_ID { get; set; }

      public virtual Inventory_Master Inventory_Master { get; set; }

      partial void InitializePartial();
   }


   // ************************************************************************
   // POCO Configuration

   public partial class Inventory_MasterConfiguration : EntityTypeConfiguration<Inventory_Master>
   {
      public Inventory_MasterConfiguration()
         : this("dbo")
      {
      }

      public Inventory_MasterConfiguration(string schema)
      {
         ToTable(schema + ".Inventory_Master");
         HasKey(x => x.Inv_ID);

         Property(x => x.Inv_ID).HasColumnName("Inv_ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
         Property(x => x.Inv_SPC).HasColumnName("Inv_SPC").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.Inv_LPC).HasColumnName("Inv_LPC").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.Inv_UPN).HasColumnName("Inv_UPN").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.Inv_Description).HasColumnName("Inv_Description").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(500);
         Property(x => x.Inv_Group).HasColumnName("Inv_Group").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.Inv_SubGroup).HasColumnName("Inv_SubGroup").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.Inv_BuyPrice).HasColumnName("Inv_BuyPrice").IsOptional().HasColumnType("money").HasPrecision(19, 4);
         Property(x => x.Inv_BuyCurrency).HasColumnName("Inv_BuyCurrency").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(10);
         Property(x => x.Inv_BuyCurrencyRate).HasColumnName("Inv_BuyCurrencyRate").IsOptional().HasColumnType("float");
         Property(x => x.Inv_SellPrice).HasColumnName("Inv_SellPrice").IsOptional().HasColumnType("money").HasPrecision(19, 4);
         Property(x => x.Inv_GL).HasColumnName("Inv_GL").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(10);
         Property(x => x.Manufacturer).HasColumnName("Manufacturer").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.Inv_UseExpired).HasColumnName("Inv_UseExpired").IsOptional().HasColumnType("bit");
         Property(x => x.Inv_UseSterile).HasColumnName("Inv_UseSterile").IsOptional().HasColumnType("bit");
         Property(x => x.deleted).HasColumnName("deleted").IsOptional().HasColumnType("bit");
         Property(x => x.deletionDate).HasColumnName("deletionDate").IsOptional().HasColumnType("datetime");
         Property(x => x.deletionUser).HasColumnName("deletionUser").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.dateLastModified).HasColumnName("dateLastModified").IsOptional().HasColumnType("datetime");
         Property(x => x.userLastModified).HasColumnName("userLastModified").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.dateCreated).HasColumnName("dateCreated").IsOptional().HasColumnType("datetime");
         Property(x => x.userCreated).HasColumnName("userCreated").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.Billing_Code).HasColumnName("Billing_Code").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(5);
         Property(x => x.Min_Benefit).HasColumnName("Min_Benefit").IsOptional().HasColumnType("money").HasPrecision(19, 4);
         Property(x => x.Max_Benefit).HasColumnName("Max_Benefit").IsOptional().HasColumnType("money").HasPrecision(19, 4);
         Property(x => x.Description_Additional).HasColumnName("Description_Additional").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(500);
         Property(x => x.Dimensions).HasColumnName("Dimensions").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
         Property(x => x.ProductModel).HasColumnName("ProductModel").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(10);
         Property(x => x.SpecialRequirements).HasColumnName("SpecialRequirements").IsOptional().IsUnicode(false).HasColumnType("varchar");
         Property(x => x.Markup).HasColumnName("Markup").IsOptional().HasColumnType("int");
         Property(x => x.PriceModelID).HasColumnName("PriceModelID").IsOptional().HasColumnType("int");
         InitializePartial();
      }

      partial void InitializePartial();
   }

   public partial class Inventory_UsedConfiguration : EntityTypeConfiguration<Inventory_Used>
   {
      public Inventory_UsedConfiguration()
         : this("dbo")
      {
      }

      public Inventory_UsedConfiguration(string schema)
      {
         ToTable(schema + ".Inventory_Used");
         HasKey(x => x.invUsed_ID);

         Property(x => x.invUsed_ID).HasColumnName("invUsed_ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
         Property(x => x.container_ID).HasColumnName("container_ID").IsOptional().HasColumnType("bigint");
         Property(x => x.cversion).HasColumnName("cversion").IsOptional().HasColumnType("tinyint");
         Property(x => x.patient_ID).HasColumnName("patient_ID").IsOptional().HasColumnType("int");
         Property(x => x.invItem_ID).HasColumnName("invItem_ID").IsOptional().HasColumnType("int");
         Property(x => x.invUsed_SPC).HasColumnName("invUsed_SPC").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.invUsed_LPC).HasColumnName("invUsed_LPC").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.invUsed_SellPrice).HasColumnName("invUsed_SellPrice").IsOptional().HasColumnType("money").HasPrecision(19, 4);
         Property(x => x.invUsed_GL).HasColumnName("invUsed_GL").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(10);
         Property(x => x.invUsed_SerialNo).HasColumnName("invUsed_SerialNo").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.invUsed_Qty).HasColumnName("invUsed_Qty").IsOptional().HasColumnType("smallint");
         Property(x => x.invUsed_Units).HasColumnName("invUsed_Units").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
         Property(x => x.invUsed_Location).HasColumnName("invUsed_Location").IsOptional().HasColumnType("int");
         Property(x => x.deleted).HasColumnName("deleted").IsOptional().HasColumnType("bit");
         Property(x => x.deletionDate).HasColumnName("deletionDate").IsOptional().HasColumnType("datetime");
         Property(x => x.deletionUser).HasColumnName("deletionUser").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.dateLastModified).HasColumnName("dateLastModified").IsOptional().HasColumnType("datetime");
         Property(x => x.userLastModified).HasColumnName("userLastModified").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.dateCreated).HasColumnName("dateCreated").IsOptional().HasColumnType("datetime");
         Property(x => x.userCreated).HasColumnName("userCreated").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.admissionStage_ID).HasColumnName("admissionStage_ID").IsOptional().HasColumnType("int");
         Property(x => x.invDescription).HasColumnName("invDescription").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(500);
         Property(x => x.invNotUsed).HasColumnName("invNotUsed").IsOptional().HasColumnType("bit");
         Property(x => x.StockStatus).HasColumnName("StockStatus").IsRequired().HasColumnType("int");
         Property(x => x.StatusMessage).HasColumnName("StatusMessage").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(200);
         Property(x => x.LOTNO).HasColumnName("LOTNO").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
         Property(x => x.ExtStudy_ID).HasColumnName("ExtStudy_ID").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);

         HasOptional(a => a.Inventory_Master).WithMany(b => b.Inventory_Used).HasForeignKey(c => c.invItem_ID);
         InitializePartial();
      }

      partial void InitializePartial();
   }
}
// </auto-generated>